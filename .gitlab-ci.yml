stages:
  - build
  - deploy
variables:
  VARNISH_STABLE: "6.0"
  VARNISH_LATEST: "7.0"

services:
  - docker:dind

image: docker:20

before_script:
  - apk add --no-cache w3m curl jq gawk grep bash
  - find . -name "*.sh" -print0 | xargs -0 -r -n1 bash -n
  - export TIMESTAMP="$(date +%s)"
  - export VARNISH_PATCH="$(w3m -dump https://github.com/varnishcache/varnish-cache/releases | grep -i "${VARNISH_MINOR}" | grep -v 'â€¦' | awk '{print $2}' | head -n1)"
  - export VARNISH_MAJOR="$(echo "${VARNISH_PATCH}" | cut -d . -f 1)"

build:docker:
  stage: build
  script:
    - >
      docker build
      --no-cache
      --pull
      --build-arg VARNISH_VERSION="${VARNISH_PATCH}"
      --build-arg ALPINE_VERSION="${ALPINE_VERSION}"
      --tag "${IMAGE_NAME}:latest"
      --tag "${IMAGE_NAME}:latest-${TIMESTAMP}"
      --file "${CI_PROJECT_DIR}/Dockerfile"
      "${CI_PROJECT_DIR}"
  except:
    - master
  parallel:
    matrix:
      - VARNISH_MINOR: [ "6.6","7.0" ]
        ALPINE_VERSION: [ "3.14" ]
        IMAGE_NAME: [ "hermsi/alpine-varnish" ]
      - VARNISH_MINOR: [ "6.0" ]
        ALPINE_VERSION: [ "3.10" ]
        IMAGE_NAME: [ "hermsi/alpine-varnish" ]

deploy:docker:
  stage: deploy
  script:
    - >
      docker build
      --no-cache
      --pull
      --build-arg VARNISH_VERSION="${VARNISH_PATCH}"
      --build-arg ALPINE_VERSION="${ALPINE_VERSION}"
      --tag "${IMAGE_NAME}:${VARNISH_MAJOR}"
      --tag "${IMAGE_NAME}:${VARNISH_MINOR}"
      --tag "${IMAGE_NAME}:${VARNISH_PATCH}"
      --tag "${IMAGE_NAME}:latest"
      --tag "${IMAGE_NAME}:latest-${TIMESTAMP}"
      --file "${CI_PROJECT_DIR}/Dockerfile"
      "${CI_PROJECT_DIR}"
    - >
      mkdir -p "${HOME}/.docker" &&
      mv "${DOCKER_CONFIG_JSON}" "${HOME}/.docker/config.json" &&
      chmod 0600 "${HOME}/.docker/config.json"
    - docker push "${IMAGE_NAME}:${VARNISH_MINOR}"
    - docker push "${IMAGE_NAME}:${VARNISH_PATCH}"
    - if [ "${VARNISH_MINOR}" == "${VARNISH_LATEST}" ]; then docker push "${IMAGE_NAME}:latest" && docker push "${IMAGE_NAME}:latest-${TIMESTAMP}"; fi
    - if [ "${VARNISH_MINOR}" == "${VARNISH_STABLE}" ]; then docker push "${IMAGE_NAME}:stable"; fi
  only:
    - master
  parallel:
    matrix:
      - VARNISH_MINOR: [ "6.6","7.0" ]
        ALPINE_VERSION: [ "3.14" ]
        IMAGE_NAME: [ "hermsi/alpine-varnish", "quay.io/hermsi1337/alpine-varnish" ]
      - VARNISH_MINOR: [ "6.0" ]
        ALPINE_VERSION: [ "3.10" ]
        IMAGE_NAME: [ "hermsi/alpine-varnish", "quay.io/hermsi1337/alpine-varnish" ]